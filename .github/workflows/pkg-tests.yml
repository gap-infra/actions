name: "Run selected package tests"

on:
  workflow_dispatch:
    inputs:
      container:
        description: 'GHCR Docker image from gap-system'
        required: true
        type: string
        default: gap-docker-master
      packages:
        description: 'Packages to test (whitespace separated e.g. "digraphs semigroups"; leave blank to test all)'
        required: false
        type: string
  workflow_call:
    inputs:
      container:
        required: true
        type: string

jobs:
  extract:
    name: "Decide packages to test in ${{ github.event.inputs.container || inputs.container }}"
    runs-on: ubuntu-latest
    container: ghcr.io/gap-system/${{ github.event.inputs.container || inputs.container }}:master
    outputs:
      matrix: ${{ steps.get-names.outputs.matrix }}
      container: ghcr.io/gap-system/${{ github.event.inputs.container || inputs.container }}:master
    steps:
      - name: "Get the list of package names"
        id: get-names
        run: |
          if [ "${{ github.event.inputs.packages }}" = "" ]; then
            # Assume that every subdir of ${GAP_HOME}/pkg containing a
            # PackageInfo.g file holds the name of a package to test
            cd ${GAP_HOME}/pkg
            # Get each dir, get name: the string before the first /, and before the first -, and make lowercase
            PACKAGES=`ls */PackageInfo.g | cut -d'/' -f1 | cut -d'-' -f1 | tr '[:upper:]' '[:lower:]' | sort`
          else
            PACKAGES="${{ github.event.inputs.packages }}"
          fi
          MATRIX="{\"package\":["
          for PKG in ${PACKAGES}; do
            echo "${PKG}"
            MATRIX="${MATRIX}\"${PKG}\","
          done
          MATRIX="${MATRIX}]}"
          echo "::set-output name=matrix::$MATRIX"

  individual-package:
    name: "${{ matrix.package }}"
    needs: extract
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.extract.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v2

      - run: docker pull ${{ needs.extract.outputs.container }}

      - name: "Run package tests with default packages loaded"
        timeout-minutes: 20
        run: >
          docker run
          -v $PWD:/home/workspace
          ${{ needs.extract.outputs.container }}
          /bin/sh -c "PKG_NAME=${{ matrix.package }} /home/workspace/pkg-tests.sh"

      - name: "Run package tests with minimal packages loaded"
        timeout-minutes: 20
        run: >
          docker run
          -v $PWD:/home/workspace
          ${{ needs.extract.outputs.container }}
          /bin/sh -c "PKG_NAME=${{ matrix.package }} /home/workspace/pkg-tests.sh -A"
